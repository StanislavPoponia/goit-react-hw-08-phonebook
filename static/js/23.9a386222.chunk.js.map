{"version":3,"file":"static/js/23.9a386222.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Phonebook/FormPhonebook.module.css?d770","components/Phonebook/FormPhonebook.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Button/button-styled.module.css?f783","components/Button/ButtonStyled.jsx","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx","utils/toast.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FormPhonebook_form__UlByX\",\"label\":\"FormPhonebook_label__K8fjg\",\"input\":\"FormPhonebook_input__I01af\",\"btn\":\"FormPhonebook_btn__I4QZe\",\"error\":\"FormPhonebook_error__47N8k\"};","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { RotatingLines } from 'react-loader-spinner';\nimport {\n  useAddContactMutation,\n  useFetchContactsQuery,\n} from 'redux/contactsSlice';\nimport { useEffect } from 'react';\n\nimport { notifyAddContact, serverError } from 'utils/toast';\nimport css from './FormPhonebook.module.css';\n\nconst FormPhonebook = () => {\n  const [addContact, { isLoading, isSuccess, isError }] =\n    useAddContactMutation();\n  const { data: contacts } = useFetchContactsQuery();\n\n  useEffect(() => {\n    if (isSuccess) {\n      notifyAddContact();\n    }\n  }, [isSuccess]);\n\n  useEffect(() => {\n    if (isError) {\n      serverError();\n    }\n  }, [isError]);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const name = values.name;\n    const number = values.phone;\n    contacts.find(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    )\n      ? alert(`${values.name} is already in contacts!`)\n      : addContact({ name, number }) && resetForm();\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .min(2, 'Too Short!')\n      .max(20, 'Too Long!')\n      .required('Name is required field'),\n\n    phone: Yup.number()\n      .typeError('That does not look like a phone number')\n      .positive(\"A phone number can't start with a minus\")\n      .integer(\"A phone number can't include a decimal point\")\n      .required('A phone number is required'),\n  });\n\n  const initialValues = {\n    name: '',\n    phone: '',\n  };\n\n  return (\n    <>\n      <ToastContainer autoClose={1000} position=\"top-center\" />\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form className={css.form}>\n          <label className={css.label}>\n            Name\n            <Field\n              className={css.input}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name\"\n            />\n            <ErrorMessage className={css.error} name=\"name\" component=\"div\" />\n          </label>\n          <label className={css.label}>\n            Number\n            <Field\n              className={css.input}\n              type=\"tel\"\n              name=\"phone\"\n              placeholder=\"phone\"\n            />\n            <ErrorMessage className={css.error} name=\"phone\" component=\"div\" />\n          </label>\n          <button className={css.btn} disabled={isLoading} type=\"submit\">\n            {isLoading && <RotatingLines height=\"20\" width=\"20\" />}\n            Add contact\n          </button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default FormPhonebook;","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { DebounceInput } from 'react-debounce-input';\n\nimport { setFilter } from 'redux/filterSlice';\nimport { getFilter } from 'redux/selectors';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const valueFilter = payload => {\n    dispatch(setFilter(payload));\n  };\n\n  const changeFilter = e => {\n    valueFilter(e.target.value);\n  };\n\n  return (\n    <label className={css.label}>\n      Find contacts by name\n      <DebounceInput\n        minLength={1}\n        debounceTimeout={200}\n        className={css.input}\n        type=\"text\"\n        value={filter}\n        placeholder=\"Search\"\n        onChange={changeFilter}\n      />\n    </label>\n  );\n};\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button-styled_btn__u4xXP\"};","import css from './button-styled.module.css';\nimport PropTypes from 'prop-types';\nimport { RotatingLines } from 'react-loader-spinner';\n\nconst ButtonStyled = ({ children, disabled, isLoading, ...rest }) => {\n  return (\n    <button className={css.btn} disabled={disabled} {...rest} type=\"submit\">\n      {isLoading && <RotatingLines height=\"20\" width=\"20\" />}\n      {children}\n    </button>\n  );\n};\n\nButtonStyled.propTypes = {\n  children: PropTypes.node.isRequired,\n  disabled: PropTypes.bool,\n  isLoading: PropTypes.bool,\n};\n\nexport default ButtonStyled;","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactItem_contactItem__Z4FuP\",\"delBtn\":\"ContactItem_delBtn__1B6Ri\",\"btn\":\"ContactItem_btn__1h5dG\"};","import { PropTypes } from 'prop-types';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nimport ButtonStyled from '../Button/ButtonStyled';\nimport {\n  useDeleteContactMutation,\n  \n} from 'redux/contactsSlice';\nimport css from './ContactItem.module.css';\n\n  const ContactItem = ({ id, name, number }) => {\n  const [deleteContact, { isLoading: isDeleting, isSuccess: isDeleted }] =\n    useDeleteContactMutation();\n \n  useEffect(() => {\n    if (isDeleted) {\n      toast.success('Contact has been deleted!');\n    }\n   \n  }, [isDeleted]);\n\n  const handleDeleteClick = () => { \n      deleteContact(id); };\n  return (\n    <li className={css.contactItem}>\n   {(\n        <>\n          <span>{name}:</span> \n          <span>{number}</span>\n          <div>\n            <ButtonStyled onClick={handleDeleteClick} disabled={isDeleting}>\n             \n              Delete\n            </ButtonStyled>\n          </div>\n        </>\n      )}\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;","import { useSelector } from 'react-redux';\nimport ContactItem from '../ContactItem';\nimport { getFilteredContacts } from 'redux/selectors';\n\nimport { useFetchContactsQuery } from 'redux/contactsSlice';\nimport { getFilter } from 'redux/selectors';\n\nconst ContactList = () => {\n  const filter = useSelector(getFilter);\n\n  const { data: contacts, isLoading, error } = useFetchContactsQuery();\n  return (\n    <>\n      {isLoading && <p>loading</p>}\n      {error && (\n        <p>\n          Sorry, something wrong, please try again\n        </p>\n      )}\n      {contacts && contacts.length === 0 && <p>There is no any contact</p>}\n      <ul>\n        {contacts &&\n          getFilteredContacts(contacts, filter).map(({ id, name, number }) => (\n            <ContactItem key={id} name={name} number={number} id={id} />\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactsPage_wrapper__HYOyv\",\"titlePhone\":\"ContactsPage_titlePhone__ODE41\",\"titleCont\":\"ContactsPage_titleCont__JLcCo\"};","import { useSelector } from 'react-redux';\n\nimport FormPhonebook from 'components/Phonebook';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport { getIsLoggedIn } from 'redux/selectors';\n\nimport css from './ContactsPage.module.css';\n\nconst ContactsPage = () => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return (\n    isLoggedIn && (\n      <div className={css.wrapper}>\n        <h1 className={css.titlePhone}>Phonebook</h1>\n        <FormPhonebook />\n        <h2 className={css.titleCont}>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    )\n  );\n};\nexport default ContactsPage;","import { toast } from 'react-toastify';\n\nexport const loginError = () => toast.error('Sorry, wrong email or password');\n\nexport const registerError = () =>\n  toast.error('Incorrect data entered');\n\nexport const serverError = () =>\n  toast.error('Sorry, something wrong, please try again');\n\nexport const notifyAddContact = () => toast.success('Contact added');\n\nexport const notifyDeliteContact = () => toast.info('Contact deleted');\n\nexport const notifyUpdateContact = () =>\n  toast.success('The contact has been updated');"],"names":["useAddContactMutation","addContact","isLoading","isSuccess","isError","contacts","useFetchContactsQuery","data","useEffect","notifyAddContact","serverError","validationSchema","Yup","shape","name","min","max","required","phone","typeError","positive","integer","autoClose","position","initialValues","onSubmit","values","resetForm","number","find","contact","toLowerCase","alert","className","css","type","placeholder","component","disabled","height","width","dispatch","useDispatch","filter","useSelector","getFilter","DebounceInput","minLength","debounceTimeout","value","onChange","e","payload","target","setFilter","children","rest","id","useDeleteContactMutation","deleteContact","isDeleting","isDeleted","toast","onClick","error","length","getFilteredContacts","map","getIsLoggedIn","loginError","registerError"],"sourceRoot":""}